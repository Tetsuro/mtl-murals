{"version":3,"sources":["main.js"],"names":["mtlMurals","MURAL_URL","$MURAL_INFO","$","$MURAL_IMAGE","$MURAL_LIST","MURAL_LIST_ITEM_CLASS","MURAL_LIST_BUTTON_CLASS","MURAL_LIST_META_CLASS","MURAL_LIST_IMAGE_CLASS","MURAL_LIST_ADDRESS_CLASS","$MURAL_TOTAL_COUNT_NODE","$MURAL_VISIBLE_COUNT_NODE","map","markers","totalCount","visibleCount","initMap","google","maps","Map","document","getElementById","window","addEventListener","debounce","debouncedResize","getMuralData","then","data","addListener","updateMap","plotMarkers","populateList","html","Promise","resolve","reject","ajax","dataType","cache","url","reqUrl","xmlToJSON","success","error","muralSpotsArray","features","length","bounds","LatLngBounds","forEach","muralSpot","index","latitude","properties","longitude","image","address","adresse","artist","artiste","year","annee","marker","Marker","position","lat","lng","title","animation","Animation","DROP","id","LatLng","extend","push","fitBounds","newBounds","getBounds","contains","show","hide","markerListItem","createElement","markerListButton","markerListMeta","markerListAddress","markerListArtist","markerListYear","markerListImage","classList","add","setAttribute","appendChild","innerHTML","event","trigger","e","bg","target","getAttribute","style","backgroundImage"],"mappings":"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","file":"main.js","sourcesContent":["var mtlMurals = (function() {\n  const MURAL_URL = 'http://donnees.ville.montreal.qc.ca/dataset/53d2e586-6e7f-4eae-89a1-2cfa7fc29fa0/resource/d325352b-1c06-4c3a-bf5e-1e4c98e0636b/download/murales.json';\n  const $MURAL_INFO = $('.mural-info__title');\n  const $MURAL_IMAGE = $('.mural-info__image');\n  const $MURAL_LIST = $('.mural-list');\n  const MURAL_LIST_ITEM_CLASS = 'mural-list__item';\n  const MURAL_LIST_BUTTON_CLASS = 'mural-list__button';\n  const MURAL_LIST_META_CLASS = 'mural-list__meta';\n  const MURAL_LIST_IMAGE_CLASS = 'mural-list__image-wrapper';\n  const MURAL_LIST_ADDRESS_CLASS = 'mural-list__address';\n  const $MURAL_TOTAL_COUNT_NODE = $('.mural-count__total');\n  const $MURAL_VISIBLE_COUNT_NODE = $('.mural-count__visible');\n\n  let map = {};\n  let markers = [];\n  let totalCount = 0;\n  let visibleCount;\n\n  function initMap() {\n    map = new google.maps.Map(document.getElementById('map'));\n    window.addEventListener('resize', debounce(debouncedResize, 300));\n\n    getMuralData()\n      .then(function(data) {\n          map.addListener('dragend', updateMap);\n          map.addListener('zoom_changed', updateMap);\n          map.addListener('resize', updateMap);\n          return data;\n      })\n      .then(plotMarkers)\n      .then(populateList)\n      .then(function(){\n        $MURAL_VISIBLE_COUNT_NODE.html(totalCount); // On init, # of visible markers == total markers.\n        $MURAL_TOTAL_COUNT_NODE.html(totalCount);\n      });\n  }\n\n  function getMuralData() {\n    return new Promise(function(resolve, reject) {\n      $.ajax({\n        dataType: 'json',\n        cache: false,\n        url: 'https://proxy.hackeryou.com',\n        data: {\n          reqUrl: MURAL_URL,\n          xmlToJSON: false\n        },\n        success: resolve,\n        error: reject\n      });\n    });\n  }\n\n  function plotMarkers(data) {\n    let muralSpotsArray = data.features;\n    totalCount = muralSpotsArray.length;\n    let bounds = new google.maps.LatLngBounds();\n\n    muralSpotsArray.forEach(function(muralSpot, index) {\n      let latitude = muralSpot.properties.latitude;\n      let longitude = muralSpot.properties.longitude;\n      let image = muralSpot.properties.image;\n      let address = muralSpot.properties.adresse;\n      let artist = muralSpot.properties.artiste;\n      let year = muralSpot.properties.annee;\n\n      let marker = new google.maps.Marker({\n        position: {lat: muralSpot.properties.latitude, lng: muralSpot.properties.longitude},\n        map: map,\n        title: address,\n        animation: google.maps.Animation.DROP,\n        id: index,\n        image: image,\n        artist: artist,\n        year: year\n      });\n\n      let position = new google.maps.LatLng(latitude, longitude);\n      bounds.extend(position);\n      markers.push(marker);\n\n      marker.addListener('click', function() {\n        // $MURAL_INFO.html(address);\n        // $MURAL_IMAGE.attr('src', image);\n      });\n    });\n    map.fitBounds(bounds);\n    updateMap();\n  }\n\n  function updateMap() {\n    let newBounds = map.getBounds();\n    visibleCount = 0;\n    // Can use Array Filter here later\n    markers.forEach(function(marker) {\n      if (newBounds.contains(marker.position)) {\n        $('[data-index=' + marker.id +']').show();\n        visibleCount++;\n      } else {\n        $('[data-index=' + marker.id +']').hide();\n      }\n    });\n    $MURAL_VISIBLE_COUNT_NODE.html(visibleCount);\n  }\n\n  function populateList() {\n    markers.forEach(function(marker) {\n      let markerListItem = document.createElement('li');\n      let markerListButton = document.createElement('button');\n      let markerListMeta = document.createElement('p');\n      let markerListAddress = document.createElement('p');\n      let markerListArtist = document.createElement('span');\n      let markerListYear = document.createElement('span');\n      let markerListImage = document.createElement('div');\n\n      markerListItem.classList.add(MURAL_LIST_ITEM_CLASS);\n      markerListItem.setAttribute('data-index', marker.id);\n      $MURAL_LIST[0].appendChild(markerListItem);\n      markerListItem.appendChild(markerListButton);\n      markerListButton.classList.add(MURAL_LIST_BUTTON_CLASS)\n\n      markerListAddress.classList.add(MURAL_LIST_ADDRESS_CLASS)\n      markerListAddress.innerHTML = marker.title;\n      markerListMeta.appendChild(markerListAddress);\n      markerListMeta.classList.add(MURAL_LIST_META_CLASS)\n\n      markerListArtist.innerHTML = marker.artist;\n      markerListYear.innerHTML = ' (' + marker.year + ')';\n\n      markerListImage.setAttribute('data-bg', marker.image);\n      markerListImage.classList.add('lazyload', MURAL_LIST_IMAGE_CLASS);\n      markerListButton.appendChild(markerListImage);\n      markerListButton.appendChild(markerListMeta);\n      markerListMeta.appendChild(markerListArtist);\n      markerListMeta.appendChild(markerListYear);\n\n    });\n  }\n\n  function debouncedResize() {\n    google.maps.event.trigger(map, 'resize');\n  }\n\n  document.addEventListener('lazybeforeunveil', function(e){\n    var bg = e.target.getAttribute('data-bg');\n    if(bg){\n      e.target.style.backgroundImage = 'url(' + bg + ')';\n    }\n  });\n\n\n  return {\n    initMap: initMap\n  }\n})();\n\nmtlMurals.initMap();\n"]}